name: Build and Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # dotenv 설치 및 로드
      - name: Load environment variables
        run: |
          cat << 'EOF' > .env
          ${{ secrets.ENV_FILE }}
          EOF
          export $(cat .env | xargs)
          echo "DOCKER_USERNAME=$DOCKER_USERNAME"

      # JDK 설정
      - name: ☕️ set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Maven 빌드
      - name: Build JAR File
        run: |
          mvn clean package -DskipTests
        env:
          SPRING_DATASOURCE_URL: $SPRING_DATASOURCE_URL
          SPRING_DATASOURCE_USERNAME: $SPRING_DATASOURCE_USERNAME
          SPRING_DATASOURCE_PASSWORD: $SPRING_DATASOURCE_PASSWORD

      # Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
          docker build -t $DOCKER_USERNAME/whenwhen:latest .
          docker push $DOCKER_USERNAME/whenwhen:latest

      # EC2에 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: $EC2_HOST
          username: $EC2_USER
          key: $EC2_KEY
          script: |
            sudo docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
            sudo docker pull $DOCKER_USERNAME/whenwhen:latest
            sudo docker stop whenwhen-container || true
            sudo docker rm whenwhen-container || true
            sudo docker run -d \
              -p 8080:8080 \
              --name whenwhen-container \
              --env-file .env \
              "$DOCKER_USERNAME/whenwhen:latest"
