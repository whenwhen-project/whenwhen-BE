name: Build and Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # JDK 설정
      - name: ☕️ set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Maven 빌드
      - name: Build JAR File
        run: |
          mvn clean package -DskipTests
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}

      # Docker 이미지 빌드
      - name: Build and Push Docker Image
        run: |
          docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/whenwhen:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/whenwhen:latest

      # EC2에 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/whenwhen:latest
            sudo docker stop whenwhen-container || true
            sudo docker rm whenwhen-container || true
            sudo docker run -d \
              -p 8080:8080 \
              --name whenwhen-container \
              -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
              ${{ secrets.DOCKER_USERNAME }}/whenwhen:latest
